---
- name: >
    Install ACL to enable Ansible use tmp dir when becoming an unprivileged user
  apt:
    name:
    - acl
    state: present
- name: Enable automatic reboots after unattended upgrades
  lineinfile:
    path: /etc/apt/apt.conf.d/50unattended-upgrades
    create: true
    regexp: >-
      Unattended-Upgrade::Automatic-Reboot "true";
    line: >-
      Unattended-Upgrade::Automatic-Reboot "true";
    state: present
- name: Disable unnecessary RaspberryPi features
  lineinfile:
    path: /boot/config.txt
    regexp: >-
      {{ item.regexp }}
    line: >-
      {{ item.line }}
    state: present
  register: line_in_config_replacement
  failed_when:
  - line_in_config_replacement is failed
  - line_in_config_replacement.rc != 257
  loop:
  - regexp: dtparam=
    line: dtparam=audio=off
  - regexp: dtoverlay=
    line: dtoverlay=pi3-disable-wifi,pi3-disable-bt
- name: Install system software prerequisites
  apt:
    name:
    - git
    - jq
    - mc
    - openvpn
    - samba
    - unattended-upgrades
    state: present
- name: Install pythonic prerequisites
  apt:
    name:
    - python3-setuptools
    - python3-venv
    - python3-virtualenv
    - virtualenv
    state: present
- name: Install build dependencies for python OS-specific binary wheels
  apt:
    name:
    - build-essential
    - python3-dev
    state: present
- name: Set up privileged ports access software
  import_tasks: authbind.yml
- name: Set up privileged access to a restricted iptables command subset
  import_tasks: iptables.yml
- name: Ensure that systemd dir for user units is there
  file:
    path: /etc/systemd/user
    mode: u=rwx,g=rx,o=rx
    owner: root
    group: root
    state: directory
- name: Create a user for opencanary app
  user:
    create_home: true
    name: >-
      {{ app_user_name }}
    state: present
    uid: >-  # to be consistent across updates, changes, reinstalls
      {{ app_user_id }}
# vi: ts=2 sts=2 sw=2 expandtab:
